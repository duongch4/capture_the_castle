In Milestone 2, our goals and completed goals were:
- Implement ECS design pattern
	- The ECS design pattern includes collision system between: 
		- player vs player
		- player vs bandit
		- player vs soldier
		- all characters and maze wall
	- The ECS design pattern includes collision system
	- ECS design is heavily based on Austin Morlan's simple ecs design
	(https://austinmorlan.com/posts/entity_component_system/#the-entity)
	- ECS is currently employed only for the Game elements. UI elements are handled separately.
- Implement AI for bandit character
	- Simple AI has been done for bandits but there are still improvements that will be made in future milestones
	- Bandit has Patrol and Chase mode
		- in Patrol, the bandits looks for any random open space in maze to walk toward.
		- in Chase, the bandits have detected the player within a set distance. They will move according the closest path.
- Implement Help Screen
	- the help screen is completed with mouse interactions (hover and mouse clicks) for the buttons
	- Help screen pauses the game then resumes when window has been closed
- Animate characters
	- the sprite sheets for character animation has been prepared
	- the player and bandit characters are animated when they move
- Prepare sprites for the powerups
	- bomb and shield power up sprites have been prepared
- Defined maze regions (Bandit, Player1, Player2)
	- Maze regions facilitates game logic: Based on which region entity vs entity collision occured, the response is different.
	- Player1 and Player2 colliding in Player1 region will cause Player2 to respawned back at their initial posiiton, while
	if the coolision was in Player2 region, Player1 is respawned
- Added main background music
- Implemented end game screen
	- quit button works but there is some delay between the time that the button was clicked and when the window actually closes

Discrepancy in Week 3 ~ 4 from project proposal
Did more:
- Improved Bandit movement and spawning mechanism
	- instead of hardcoded initial position, bandits are spawned at random position within the bandit maze region
- Major performance optimization for maze
	- after last sprint, we realized drawing the maze tiles at every update was causing performance issues to some machines.
	- in this sprint, we modified the tilemap draw to only draw the tiles once per game, and in the subsequent draws, we reuse
	the pre-drawn tilemap as texture.
